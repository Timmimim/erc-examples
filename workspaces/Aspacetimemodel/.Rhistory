proj4string(fullData.sdf) = CRS(ll)
})
View(Tracks.df)
fullData.df = load("best.use.2014.Rdata")
begin = 1975; end = 2014
fullData.df = best.use %>%
mutate(Int = WmaxS * .5144,
DIntDt = DWmaxDt * .5144) %>%
filter(Yr >= begin, Yr <= end, Int >= 33.0, M == FALSE)
fullData.df$Yr
fullData.df["Yr"]
fullData.df = load("best.use.2014.Rdata")
Tracks.df = filter(Tracks.df, Int >= input$bins)
fullData.df = load("best.use.2014.Rdata")
begin = 1975; end = 2014
setwd("C:/Users/m_konk01/Desktop/Reproducing papers/A spacetime statistical climate model for hurricane intensification/A spacetime statistical climate model for hurricane intensification")
install.packages("rsconnect")
rsconnect::setAccountInfo(name='markuskonkol', token='C0476D0CB0E5DA551EC9FB1021873C41', secret='0gz0lkoETdvaTjMzfy/SEFJMyeW7h0V5uqp+x+6g')
ip <- installed.packages()
pkgs.to.remove <- ip[!(ip[,"Priority"] %in% c("base", "recommended")), 1]
setwd("C:/Users/m_konk01/sciebo/o2r-data/Korpus/Reproducing papers/Finished/A space–time statistical climate model for hurricane intensification/A space–time statistical climate model for hurricane intensification")
setwd("C:/Users/m_konk01/sciebo/o2r-data/Korpus/Reproducing papers/Finished/A space–time statistical climate model for hurricane intensification")
setwd("C:/Users/m_konk01/sciebo/o2r-data/Korpus/Reproducing papers/Finished/A space–time statistical climate model for hurricane intensification/A space–time statistical climate model for hurricane intensification")
dir()
setwd()
setwd(dir())
list.files(pattern="Untitled.Rmd")
list.files(pattern="mjomeiAnalysis.Rmd")
list.files(pattern="mjomeiAnalysis.Rmd")
list.files(pattern="mjomeiAnalysis.Rmd")
library(ggplot2)
library("dplyr")
load("mjoBestUse.RData")
Tracks.df = filter(Tracks.df, Int >= 33.0)
fullData.df = load("best.use.2014.Rdata")
begin = 1975; end = 2014
fullData.df = best.use %>%
mutate(Int = WmaxS * .5144,
DIntDt = DWmaxDt * .5144) %>%
filter(Yr >= begin, Yr <= end, Int >= 33.0, M == FALSE)
library("rgdal")
ll = "+proj=longlat +ellps=WGS84"
Tracks.sdf = Tracks.df
coordinates(Tracks.sdf) = c("lon", "lat")
proj4string(Tracks.sdf) = CRS(ll)
fullData.sdf = fullData.df
coordinates(fullData.sdf) = c("lon", "lat")
proj4string(fullData.sdf) = CRS(ll)
library("raster")
r = raster(ncol = 10, nrow = 5,
xmn = -100, xmx = -20,
ymn = 10, ymx = 50)
Tracks.grid = rasterize(Tracks.sdf, r,
field = 'DIntDt',
fun = mean)
test = rasterToPolygons(Tracks.grid)
Example.sdf = subset(Tracks.sdf,
Sid == 1675 |
Sid == 1677 |
Sid == 1683)
Example.grid = rasterize(Example.sdf, r,
field = 'DIntDt',
fun = mean)
library("RColorBrewer")
library("rasterVis")
range(values(Example.grid), na.rm = TRUE)
rng = seq(0, 1.5, 1.5)
breaks = c(0, 0.25, 0.50, 0.75, 1.0, 1.25, 1.50)
cr = brewer.pal(9, "Purples")
cr = cr[-(1:3)]
vals = levelplot(Example.grid, margin = FALSE,
xlab = NULL, ylab = NULL,
col.regions = cr, at = rng,
colorkey = NULL,
border = "white", border.lwd = 2, pretty=TRUE,
par.settings = list(fontsize = list(text = 15)))
library(mapproj)
library(maptools)
outlines = as.data.frame(map("world", xlim = c(-100, -20),
ylim = c(10, 50),
plot = FALSE)[c("x", "y")],
color = "gray")
map = geom_path(aes(x, y), inherit.aes = FALSE, data = outlines,
alpha = .8, show_guide = FALSE, color = "blue")
ext = as.vector(extent(r))
boundaries = map("world", fill = TRUE, xlim = ext[1:2],
ylim = ext[3:4], plot = FALSE)
IDs = sapply(strsplit(boundaries$names, ":"), function(x) x[1])
bPols = map2SpatialPolygons(boundaries, IDs = IDs,
proj4string = CRS(projection(r)))
require(gridExtra)
require(sp)
Int2a.df = filter(Tracks.df, Sid == 1675)
Int2b.df = filter(Tracks.df, Sid == 1677)
Int2c.df = filter(Tracks.df, Sid == 1683)
holdera = data.frame(Int2a.df$lon, Int2a.df$lat)
holderb = data.frame(Int2b.df$lon, Int2b.df$lat)
holderc = data.frame(Int2c.df$lon, Int2c.df$lat)
linesa = SpatialLines(list(Lines(list(Line(holdera)),
ID = 'Int2a.df$Sid')))
linesb = SpatialLines(list(Lines(list(Line(holderb)),
ID = 'Int2b.df$Sid')))
linesc = SpatialLines(list(Lines(list(Line(holderc)),
ID = 'Int2c.df$Sid')))
tracking = vals + layer(sp.polygons(bPols, col = gray(.8))) +
layer(sp.lines(linesa, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesb, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesc, lwd = 2, col = gray(.4))) +
layer(panel.text(-63.5, 27.5, 'Gustav', col = gray(.4))) +
layer(panel.text(-51, 16.5, 'Ike', col = gray(.4))) +
layer(panel.text(-81.5, 16.25, 'Omar', col = gray(.4)))
tracking
tracking
require(gridExtra)
require(sp)
Int2a.df = filter(Tracks.df, Sid == 1675)
Int2b.df = filter(Tracks.df, Sid == 1677)
Int2c.df = filter(Tracks.df, Sid == 1683)
holdera = data.frame(Int2a.df$lon, Int2a.df$lat)
holderb = data.frame(Int2b.df$lon, Int2b.df$lat)
linesa = SpatialLines(list(Lines(list(Line(holdera)),
ID = 'Int2a.df$Sid')))
linesc = SpatialLines(list(Lines(list(Line(holderc)),
ID = 'Int2c.df$Sid')))
tracking = vals + layer(sp.polygons(bPols, col = gray(.8))) +
layer(sp.lines(linesa, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesb, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesc, lwd = 2, col = gray(.4))) +
layer(panel.text(-63.5, 27.5, 'Gustav', col = gray(.4))) +
layer(panel.text(-51, 16.5, 'Ike', col = gray(.4))) +
layer(panel.text(-81.5, 16.25, 'Omar', col = gray(.4)))
tracking
knitr::opts_chunk$set(echo = TRUE)
require(gridExtra)
require(sp)
Int2a.df = filter(Tracks.df, Sid == 1675)
Tracks.df = filter(Tracks.df, Int >= 33.0)
Tracks.df = filter(Tracks.df, Int >= 33.0)
load("mjoBestUse.RData")
Tracks.df = filter(Tracks.df, Int >= 33.0)
knitr::opts_chunk$set(echo = TRUE)
load("mjoBestUse.RData")
Tracks.df = filter(Tracks.df, Int >= 33.0)
require(gridExtra)
require(sp)
Int2a.df = filter(Tracks.df, Sid == 1675)
Int2b.df = filter(Tracks.df, Sid == 1677)
Int2c.df = filter(Tracks.df, Sid == 1683)
holdera = data.frame(Int2a.df$lon, Int2a.df$lat)
holderb = data.frame(Int2b.df$lon, Int2b.df$lat)
holderc = data.frame(Int2c.df$lon, Int2c.df$lat)
linesa = SpatialLines(list(Lines(list(Line(holdera)),
ID = 'Int2a.df$Sid')))
linesb = SpatialLines(list(Lines(list(Line(holderb)),
ID = 'Int2b.df$Sid')))
linesc = SpatialLines(list(Lines(list(Line(holderc)),
ID = 'Int2c.df$Sid')))
tracking = vals + layer(sp.polygons(bPols, col = gray(.8))) +
layer(sp.lines(linesa, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesb, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesc, lwd = 2, col = gray(.4))) +
layer(panel.text(-63.5, 27.5, 'Gustav', col = gray(.4))) +
layer(panel.text(-51, 16.5, 'Ike', col = gray(.4))) +
layer(panel.text(-81.5, 16.25, 'Omar', col = gray(.4)))
knitr::opts_chunk$set(echo = TRUE)
load("mjoBestUse.RData")
Tracks.df = filter(Tracks.df, Int >= 33.0)
rng = seq(0, 1.5, 1.5)
breaks = c(0, 0.25, 0.50, 0.75, 1.0, 1.25, 1.50)
cr = brewer.pal(9, "Purples")
cr = cr[-(1:3)]
vals = levelplot(Example.grid, margin = FALSE,
xlab = NULL, ylab = NULL,
col.regions = cr, at = rng,
colorkey = NULL,
border = "white", border.lwd = 2, pretty=TRUE,
par.settings = list(fontsize = list(text = 15)))
knitr::opts_chunk$set(echo = TRUE)
load("mjoBestUse.RData")
Tracks.df = filter(Tracks.df, Int >= 33.0)
r = raster(ncol = 10, nrow = 5,
xmn = -100, xmx = -20,
ymn = 10, ymx = 50)
Example.sdf = subset(Tracks.sdf,
Sid == 1675 |
Sid == 1677 |
Sid == 1683)
load("mjoBestUse.RData")
Tracks.df = filter(Tracks.df, Int >= 33.0)
Tracks.sdf = Tracks.df
coordinates(Tracks.sdf) = c("lon", "lat")
proj4string(Tracks.sdf) = CRS(ll)
ll = "+proj=longlat +ellps=WGS84"
Tracks.sdf = Tracks.df
coordinates(Tracks.sdf) = c("lon", "lat")
proj4string(Tracks.sdf) = CRS(ll)
r = raster(ncol = 10, nrow = 5,
xmn = -100, xmx = -20,
ymn = 10, ymx = 50)
Example.sdf = subset(Tracks.sdf,
Sid == 1675 |
Sid == 1677 |
Sid == 1683)
Example.grid = rasterize(Example.sdf, r,
field = 'DIntDt',
fun = mean)
rng = seq(0, 1.5, 1.5)
breaks = c(0, 0.25, 0.50, 0.75, 1.0, 1.25, 1.50)
cr = brewer.pal(9, "Purples")
cr = cr[-(1:3)]
vals = levelplot(Example.grid, margin = FALSE,
xlab = NULL, ylab = NULL,
col.regions = cr, at = rng,
colorkey = NULL,
border = "white", border.lwd = 2, pretty=TRUE,
par.settings = list(fontsize = list(text = 15)))
require(gridExtra)
require(sp)
Int2a.df = filter(Tracks.df, Sid == 1675)
Int2b.df = filter(Tracks.df, Sid == 1677)
Int2c.df = filter(Tracks.df, Sid == 1683)
holdera = data.frame(Int2a.df$lon, Int2a.df$lat)
holderb = data.frame(Int2b.df$lon, Int2b.df$lat)
holderc = data.frame(Int2c.df$lon, Int2c.df$lat)
linesa = SpatialLines(list(Lines(list(Line(holdera)),
ID = 'Int2a.df$Sid')))
linesb = SpatialLines(list(Lines(list(Line(holderb)),
ID = 'Int2b.df$Sid')))
linesc = SpatialLines(list(Lines(list(Line(holderc)),
ID = 'Int2c.df$Sid')))
tracking = vals + layer(sp.polygons(bPols, col = gray(.8))) +
layer(sp.lines(linesa, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesb, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesc, lwd = 2, col = gray(.4))) +
layer(panel.text(-63.5, 27.5, 'Gustav', col = gray(.4))) +
layer(panel.text(-51, 16.5, 'Ike', col = gray(.4))) +
layer(panel.text(-81.5, 16.25, 'Omar', col = gray(.4)))
tracking
knitr::opts_chunk$set(echo = TRUE)
load("mjoBestUse.RData")
Tracks.df = filter(Tracks.df, Int >= 33.0)
ll = "+proj=longlat +ellps=WGS84"
Tracks.sdf = Tracks.df
coordinates(Tracks.sdf) = c("lon", "lat")
proj4string(Tracks.sdf) = CRS(ll)
r = raster(ncol = 10, nrow = 5,
xmn = -100, xmx = -20,
ymn = 10, ymx = 50)
Example.sdf = subset(Tracks.sdf,
Sid == 1675 |
Sid == 1677 |
Sid == 1683)
Example.grid = rasterize(Example.sdf, r,
field = 'DIntDt',
fun = mean)
rng = seq(0, 1.5, 1.5)
breaks = c(0, 0.25, 0.50, 0.75, 1.0, 1.25, 1.50)
cr = brewer.pal(9, "Purples")
cr = cr[-(1:3)]
vals = levelplot(Example.grid, margin = FALSE,
xlab = NULL, ylab = NULL,
col.regions = cr, at = rng,
colorkey = NULL,
border = "white", border.lwd = 2, pretty=TRUE,
par.settings = list(fontsize = list(text = 15)))
Int2a.df = filter(Tracks.df, Sid == 1675)
Int2b.df = filter(Tracks.df, Sid == 1677)
Int2c.df = filter(Tracks.df, Sid == 1683)
holdera = data.frame(Int2a.df$lon, Int2a.df$lat)
holderb = data.frame(Int2b.df$lon, Int2b.df$lat)
holderc = data.frame(Int2c.df$lon, Int2c.df$lat)
linesa = SpatialLines(list(Lines(list(Line(holdera)),
ID = 'Int2a.df$Sid')))
linesb = SpatialLines(list(Lines(list(Line(holderb)),
ID = 'Int2b.df$Sid')))
linesc = SpatialLines(list(Lines(list(Line(holderc)),
ID = 'Int2c.df$Sid')))
tracking = vals + layer(sp.polygons(bPols, col = gray(.8))) +
layer(sp.lines(linesa, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesb, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesc, lwd = 2, col = gray(.4))) +
layer(panel.text(-63.5, 27.5, 'Gustav', col = gray(.4))) +
layer(panel.text(-51, 16.5, 'Ike', col = gray(.4))) +
layer(panel.text(-81.5, 16.25, 'Omar', col = gray(.4)))
tracking
View(Tracks.df)
load("mjoBestUse.RData")
Tracks.df = filter(Tracks.df, Int >= 33.0)
a<-load("mjoBestUse.RData")
Tracks.df = filter(Tracks.df, a$Int >= 33.0)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library("dplyr")
load("mjoBestUse.RData")
Tracks.df = filter(Tracks.df, Int >= 33.0)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library("dplyr")
library("rgdal")
library("rgdal")
library("raster")
library("RColorBrewer")
library("rasterVis")
require(gridExtra)
require(sp)
library(mapproj)
library(maptools)
sliderInput("intensity", "Intensity", min = 1, max = 50, value = 30)
renderPlot({
load("mjoBestUse.RData")
Tracks.df = filter(Tracks.df, Int >= 33.0)
ll = "+proj=longlat +ellps=WGS84"
Tracks.sdf = Tracks.df
coordinates(Tracks.sdf) = c("lon", "lat")
proj4string(Tracks.sdf) = CRS(ll)
r = raster(ncol = 10, nrow = 5,
xmn = -100, xmx = -20,
ymn = 10, ymx = 50)
Example.sdf = subset(Tracks.sdf,
Sid == 1675 |
Sid == 1677 |
Sid == 1683)
Example.grid = rasterize(Example.sdf, r,
field = 'DIntDt',
fun = mean)
rng = seq(0, 1.5, 1.5)
breaks = c(0, 0.25, 0.50, 0.75, 1.0, 1.25, 1.50)
cr = brewer.pal(9, "Purples")
cr = cr[-(1:3)]
vals = levelplot(Example.grid, margin = FALSE,
xlab = NULL, ylab = NULL,
col.regions = cr, at = rng,
colorkey = NULL,
border = "white", border.lwd = 2, pretty=TRUE,
par.settings = list(fontsize = list(text = 15)))
outlines = as.data.frame(map("world", xlim = c(-100, -20),
ylim = c(10, 50),
plot = FALSE)[c("x", "y")],
color = "gray")
map = geom_path(aes(x, y), inherit.aes = FALSE, data = outlines,
alpha = .8, show_guide = FALSE, color = "blue")
ext = as.vector(extent(r))
boundaries = map("world", fill = TRUE, xlim = ext[1:2],
ylim = ext[3:4], plot = FALSE)
IDs = sapply(strsplit(boundaries$names, ":"), function(x) x[1])
bPols = map2SpatialPolygons(boundaries, IDs = IDs,
proj4string = CRS(projection(r)))
Int2a.df = filter(Tracks.df, Sid == 1675)
Int2b.df = filter(Tracks.df, Sid == 1677)
Int2c.df = filter(Tracks.df, Sid == 1683)
holdera = data.frame(Int2a.df$lon, Int2a.df$lat)
holderb = data.frame(Int2b.df$lon, Int2b.df$lat)
holderc = data.frame(Int2c.df$lon, Int2c.df$lat)
linesa = SpatialLines(list(Lines(list(Line(holdera)),
ID = 'Int2a.df$Sid')))
linesb = SpatialLines(list(Lines(list(Line(holderb)),
ID = 'Int2b.df$Sid')))
linesc = SpatialLines(list(Lines(list(Line(holderc)),
ID = 'Int2c.df$Sid')))
tracking = vals + layer(sp.polygons(bPols, col = gray(.8))) +
layer(sp.lines(linesa, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesb, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesc, lwd = 2, col = gray(.4))) +
layer(panel.text(-63.5, 27.5, 'Gustav', col = gray(.4))) +
layer(panel.text(-51, 16.5, 'Ike', col = gray(.4))) +
layer(panel.text(-81.5, 16.25, 'Omar', col = gray(.4)))
tracking
})
load("mjoBestUse.RData")
Tracks.df = filter(Tracks.df, Int >= 33.0)
ll = "+proj=longlat +ellps=WGS84"
Tracks.sdf = Tracks.df
coordinates(Tracks.sdf) = c("lon", "lat")
proj4string(Tracks.sdf) = CRS(ll)
r = raster(ncol = 10, nrow = 5,
xmn = -100, xmx = -20,
ymn = 10, ymx = 50)
Example.sdf = subset(Tracks.sdf,
Sid == 1675 |
Sid == 1677 |
Sid == 1683)
Example.grid = rasterize(Example.sdf, r,
field = 'DIntDt',
fun = mean)
rng = seq(0, 1.5, 1.5)
breaks = c(0, 0.25, 0.50, 0.75, 1.0, 1.25, 1.50)
cr = brewer.pal(9, "Purples")
cr = cr[-(1:3)]
vals = levelplot(Example.grid, margin = FALSE,
xlab = NULL, ylab = NULL,
col.regions = cr, at = rng,
colorkey = NULL,
border = "white", border.lwd = 2, pretty=TRUE,
par.settings = list(fontsize = list(text = 15)))
outlines = as.data.frame(map("world", xlim = c(-100, -20),
ylim = c(10, 50),
plot = FALSE)[c("x", "y")],
color = "gray")
map = geom_path(aes(x, y), inherit.aes = FALSE, data = outlines,
alpha = .8, show_guide = FALSE, color = "blue")
ext = as.vector(extent(r))
boundaries = map("world", fill = TRUE, xlim = ext[1:2],
ylim = ext[3:4], plot = FALSE)
IDs = sapply(strsplit(boundaries$names, ":"), function(x) x[1])
bPols = map2SpatialPolygons(boundaries, IDs = IDs,
proj4string = CRS(projection(r)))
Int2a.df = filter(Tracks.df, Sid == 1675)
Int2b.df = filter(Tracks.df, Sid == 1677)
Int2c.df = filter(Tracks.df, Sid == 1683)
holdera = data.frame(Int2a.df$lon, Int2a.df$lat)
holderb = data.frame(Int2b.df$lon, Int2b.df$lat)
holderc = data.frame(Int2c.df$lon, Int2c.df$lat)
linesa = SpatialLines(list(Lines(list(Line(holdera)),
ID = 'Int2a.df$Sid')))
linesb = SpatialLines(list(Lines(list(Line(holderb)),
ID = 'Int2b.df$Sid')))
linesc = SpatialLines(list(Lines(list(Line(holderc)),
ID = 'Int2c.df$Sid')))
tracking = vals + layer(sp.polygons(bPols, col = gray(.8))) +
layer(sp.lines(linesa, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesb, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesc, lwd = 2, col = gray(.4))) +
layer(panel.text(-63.5, 27.5, 'Gustav', col = gray(.4))) +
layer(panel.text(-51, 16.5, 'Ike', col = gray(.4))) +
layer(panel.text(-81.5, 16.25, 'Omar', col = gray(.4)))
tracking
renderPlot({
load("mjoBestUse.RData")
Tracks.df = filter(Tracks.df, Int >= 33.0)
ll = "+proj=longlat +ellps=WGS84"
Tracks.sdf = Tracks.df
coordinates(Tracks.sdf) = c("lon", "lat")
proj4string(Tracks.sdf) = CRS(ll)
r = raster(ncol = 10, nrow = 5,
xmn = -100, xmx = -20,
ymn = 10, ymx = 50)
Example.sdf = subset(Tracks.sdf,
Sid == 1675 |
Sid == 1677 |
Sid == 1683)
Example.grid = rasterize(Example.sdf, r,
field = 'DIntDt',
fun = mean)
rng = seq(0, 1.5, 1.5)
breaks = c(0, 0.25, 0.50, 0.75, 1.0, 1.25, 1.50)
cr = brewer.pal(9, "Purples")
cr = cr[-(1:3)]
vals = levelplot(Example.grid, margin = FALSE,
xlab = NULL, ylab = NULL,
col.regions = cr, at = rng,
colorkey = NULL,
border = "white", border.lwd = 2, pretty=TRUE,
par.settings = list(fontsize = list(text = 15)))
outlines = as.data.frame(map("world", xlim = c(-100, -20),
ylim = c(10, 50),
plot = FALSE)[c("x", "y")],
color = "gray")
map = geom_path(aes(x, y), inherit.aes = FALSE, data = outlines,
alpha = .8, show_guide = FALSE, color = "blue")
ext = as.vector(extent(r))
boundaries = map("world", fill = TRUE, xlim = ext[1:2],
ylim = ext[3:4], plot = FALSE)
IDs = sapply(strsplit(boundaries$names, ":"), function(x) x[1])
bPols = map2SpatialPolygons(boundaries, IDs = IDs,
proj4string = CRS(projection(r)))
Int2a.df = filter(Tracks.df, Sid == 1675)
Int2b.df = filter(Tracks.df, Sid == 1677)
Int2c.df = filter(Tracks.df, Sid == 1683)
holdera = data.frame(Int2a.df$lon, Int2a.df$lat)
holderb = data.frame(Int2b.df$lon, Int2b.df$lat)
holderc = data.frame(Int2c.df$lon, Int2c.df$lat)
linesa = SpatialLines(list(Lines(list(Line(holdera)),
ID = 'Int2a.df$Sid')))
linesb = SpatialLines(list(Lines(list(Line(holderb)),
ID = 'Int2b.df$Sid')))
linesc = SpatialLines(list(Lines(list(Line(holderc)),
ID = 'Int2c.df$Sid')))
tracking = vals + layer(sp.polygons(bPols, col = gray(.8))) +
layer(sp.lines(linesa, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesb, lwd = 2, col = gray(.4))) +
layer(sp.lines(linesc, lwd = 2, col = gray(.4))) +
layer(panel.text(-63.5, 27.5, 'Gustav', col = gray(.4))) +
layer(panel.text(-51, 16.5, 'Ike', col = gray(.4))) +
layer(panel.text(-81.5, 16.25, 'Omar', col = gray(.4)))
tracking
})
View(Tracks.df)
Tracks.df
Tracks.df$Int
View(Tracks.df)
a <- Tracks.df$Int
a
write.table(a)
write.table(a, "/test")
write.table(a, "~/")
write.table(a, "")
write.table(a, "/test")
write.table(a, "~/test")
write.table(a, "./test")
setwd("C:/Users/m_konk01/sciebo/o2r-data/Korpus/Reproducing papers/Finished/Aspacetimestatisticalclimatemodelforhurricaneintensification/Aspacetimestatisticalclimatemodelforhurricaneintensification")
write.table(a, "./test")
write.table(a, "/test")
write.csv(a)
saveRDS(a, file="mytweets.rds")
saveRDS(a, file="mytweets.df")
saveRDS(a, file="mytweets.Rdata")
df2 <- readRDS("mytweets.Rdata")
df2
saveRDS(a, file="figure1.Rdata")
install.packages("lattice")
install.packages("lattice")
View(ncdataframe19701979)
